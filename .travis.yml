language: minimal

services:
  - docker

git:
  depth: false
  quiet: true

install:
  - |
    docker build \
    -f core/Dockerfile  \
    --target CI  \
    -t learn-hub-web-server:test \
    core  # Building the repo CI test image
  - docker pull postgres:12
  - |
    docker container run -d \
    --env POSTGRES_USER=${POSTGRES_USER} \
    --env POSTGRES_PASSWORD=${POSTGRES_PASSWORD} \
    --env POSTGRES_DB=${POSTGRES_DB} \
    --name postgres_db postgres
  - |
    export POSTGRES_HOST="$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' postgres_db)"

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./core/cc-test-reporter
  - chmod +x ./core/cc-test-reporter
  - ./core/cc-test-reporter before-build

script:
  - mkdir -p core/coverage/
  - |
    docker container run -t learn-hub-web-server:test \
    black .
  - |
    docker container run -t learn-hub-web-server:test \
    flake8 .
  - |
    docker container run -t \
    --env POSTGRES_USER=${POSTGRES_USER} \
    --env POSTGRES_PASSWORD=${POSTGRES_PASSWORD} \
    --env POSTGRES_DB=${POSTGRES_DB} \
    --env POSTGRES_HOST=${POSTGRES_HOST} \
    --volume "$PWD/core/coverage:/usr/src/app/coverage" \
    learn-hub-web-server:test \
    pytest
  - |
    docker container run -t \
    --volume "$PWD/core/coverage:/usr/src/app/coverage" \
    learn-hub-web-server:test \
    coverage xml

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - cd core
  - ./cc-test-reporter format-coverage -d --input-type coverage.py coverage/report.xml
  - ./cc-test-reporter upload-coverage
